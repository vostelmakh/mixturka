// Code generated by MockGen. DO NOT EDIT.
// Source: internal/infrastructure/repository/interfaces.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/vostelmakh/mixturka/internal/domain"
)

// MockRecipeRepositoryInterface is a mock of RecipeRepositoryInterface interface.
type MockRecipeRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRecipeRepositoryInterfaceMockRecorder
}

// MockRecipeRepositoryInterfaceMockRecorder is the mock recorder for MockRecipeRepositoryInterface.
type MockRecipeRepositoryInterfaceMockRecorder struct {
	mock *MockRecipeRepositoryInterface
}

// NewMockRecipeRepositoryInterface creates a new mock instance.
func NewMockRecipeRepositoryInterface(ctrl *gomock.Controller) *MockRecipeRepositoryInterface {
	mock := &MockRecipeRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockRecipeRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRecipeRepositoryInterface) EXPECT() *MockRecipeRepositoryInterfaceMockRecorder {
	return m.recorder
}

// GetRecipes mocks base method.
func (m *MockRecipeRepositoryInterface) GetRecipes(ctx context.Context) ([]domain.Recipe, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRecipes", ctx)
	ret0, _ := ret[0].([]domain.Recipe)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRecipes indicates an expected call of GetRecipes.
func (mr *MockRecipeRepositoryInterfaceMockRecorder) GetRecipes(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRecipes", reflect.TypeOf((*MockRecipeRepositoryInterface)(nil).GetRecipes), ctx)
}

// SaveRecipe mocks base method.
func (m *MockRecipeRepositoryInterface) SaveRecipe(ctx context.Context, recipe *domain.Recipe) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveRecipe", ctx, recipe)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveRecipe indicates an expected call of SaveRecipe.
func (mr *MockRecipeRepositoryInterfaceMockRecorder) SaveRecipe(ctx, recipe interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveRecipe", reflect.TypeOf((*MockRecipeRepositoryInterface)(nil).SaveRecipe), ctx, recipe)
}
