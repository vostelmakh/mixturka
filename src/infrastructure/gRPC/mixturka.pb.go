// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: mixturka.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to list recipes
type RecipesListRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	IngredientsFilter []string               `protobuf:"bytes,1,rep,name=ingredients_filter,json=ingredientsFilter,proto3" json:"ingredients_filter,omitempty"` // List of ingredient names to filter recipes
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RecipesListRequest) Reset() {
	*x = RecipesListRequest{}
	mi := &file_mixturka_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecipesListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecipesListRequest) ProtoMessage() {}

func (x *RecipesListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mixturka_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecipesListRequest.ProtoReflect.Descriptor instead.
func (*RecipesListRequest) Descriptor() ([]byte, []int) {
	return file_mixturka_proto_rawDescGZIP(), []int{0}
}

func (x *RecipesListRequest) GetIngredientsFilter() []string {
	if x != nil {
		return x.IngredientsFilter
	}
	return nil
}

// Response for listing recipes
type RecipesListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Recipes       []*Recipe              `protobuf:"bytes,1,rep,name=recipes,proto3" json:"recipes,omitempty"` // List of recipes
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`     // Error details, if any
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecipesListResponse) Reset() {
	*x = RecipesListResponse{}
	mi := &file_mixturka_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecipesListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecipesListResponse) ProtoMessage() {}

func (x *RecipesListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mixturka_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecipesListResponse.ProtoReflect.Descriptor instead.
func (*RecipesListResponse) Descriptor() ([]byte, []int) {
	return file_mixturka_proto_rawDescGZIP(), []int{1}
}

func (x *RecipesListResponse) GetRecipes() []*Recipe {
	if x != nil {
		return x.Recipes
	}
	return nil
}

func (x *RecipesListResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

// Request to start brewing
type PotBrewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ingredients   []*Ingredient          `protobuf:"bytes,1,rep,name=ingredients,proto3" json:"ingredients,omitempty"` // List of ingredients for brewing
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PotBrewRequest) Reset() {
	*x = PotBrewRequest{}
	mi := &file_mixturka_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PotBrewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PotBrewRequest) ProtoMessage() {}

func (x *PotBrewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mixturka_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PotBrewRequest.ProtoReflect.Descriptor instead.
func (*PotBrewRequest) Descriptor() ([]byte, []int) {
	return file_mixturka_proto_rawDescGZIP(), []int{2}
}

func (x *PotBrewRequest) GetIngredients() []*Ingredient {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

// Response for brewing process
type PotBrewResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Started       bool                   `protobuf:"varint,1,opt,name=started,proto3" json:"started,omitempty"` // Indicates if brewing started successfully
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`      // Error details, if any
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PotBrewResponse) Reset() {
	*x = PotBrewResponse{}
	mi := &file_mixturka_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PotBrewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PotBrewResponse) ProtoMessage() {}

func (x *PotBrewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mixturka_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PotBrewResponse.ProtoReflect.Descriptor instead.
func (*PotBrewResponse) Descriptor() ([]byte, []int) {
	return file_mixturka_proto_rawDescGZIP(), []int{3}
}

func (x *PotBrewResponse) GetStarted() bool {
	if x != nil {
		return x.Started
	}
	return false
}

func (x *PotBrewResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

// Recipe definition
type Recipe struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`               // Name of the recipe, e.g., "Saviour Schnapps"
	Ingredients   []*Ingredient          `protobuf:"bytes,2,rep,name=ingredients,proto3" json:"ingredients,omitempty"` // List of ingredients required for the recipe
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Recipe) Reset() {
	*x = Recipe{}
	mi := &file_mixturka_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Recipe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recipe) ProtoMessage() {}

func (x *Recipe) ProtoReflect() protoreflect.Message {
	mi := &file_mixturka_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recipe.ProtoReflect.Descriptor instead.
func (*Recipe) Descriptor() ([]byte, []int) {
	return file_mixturka_proto_rawDescGZIP(), []int{4}
}

func (x *Recipe) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Recipe) GetIngredients() []*Ingredient {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

// Ingredient definition
type Ingredient struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`          // Name of the ingredient, min length 1
	Quantity      int32                  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"` // Quantity of the ingredient, min 1, max 10
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ingredient) Reset() {
	*x = Ingredient{}
	mi := &file_mixturka_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ingredient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ingredient) ProtoMessage() {}

func (x *Ingredient) ProtoReflect() protoreflect.Message {
	mi := &file_mixturka_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ingredient.ProtoReflect.Descriptor instead.
func (*Ingredient) Descriptor() ([]byte, []int) {
	return file_mixturka_proto_rawDescGZIP(), []int{5}
}

func (x *Ingredient) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Ingredient) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

// Error message for gRPC responses
type Error struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`                                                                          // Error code
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`                                                                     // Human-readable error description
	Data          map[string]string      `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Arbitrary additional error-related data
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Error) Reset() {
	*x = Error{}
	mi := &file_mixturka_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_mixturka_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_mixturka_proto_rawDescGZIP(), []int{6}
}

func (x *Error) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Error) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_mixturka_proto protoreflect.FileDescriptor

const file_mixturka_proto_rawDesc = "" +
	"\n" +
	"\x0emixturka.proto\x12\bmixturka\"C\n" +
	"\x12RecipesListRequest\x12-\n" +
	"\x12ingredients_filter\x18\x01 \x03(\tR\x11ingredientsFilter\"h\n" +
	"\x13RecipesListResponse\x12*\n" +
	"\arecipes\x18\x01 \x03(\v2\x10.mixturka.RecipeR\arecipes\x12%\n" +
	"\x05error\x18\x02 \x01(\v2\x0f.mixturka.ErrorR\x05error\"H\n" +
	"\x0ePotBrewRequest\x126\n" +
	"\vingredients\x18\x01 \x03(\v2\x14.mixturka.IngredientR\vingredients\"R\n" +
	"\x0fPotBrewResponse\x12\x18\n" +
	"\astarted\x18\x01 \x01(\bR\astarted\x12%\n" +
	"\x05error\x18\x02 \x01(\v2\x0f.mixturka.ErrorR\x05error\"T\n" +
	"\x06Recipe\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x126\n" +
	"\vingredients\x18\x02 \x03(\v2\x14.mixturka.IngredientR\vingredients\"<\n" +
	"\n" +
	"Ingredient\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\bquantity\x18\x02 \x01(\x05R\bquantity\"\x9d\x01\n" +
	"\x05Error\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12-\n" +
	"\x04data\x18\x03 \x03(\v2\x19.mixturka.Error.DataEntryR\x04data\x1a7\n" +
	"\tDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\x9a\x01\n" +
	"\bMixturka\x12L\n" +
	"\vListRecipes\x12\x1c.mixturka.RecipesListRequest\x1a\x1d.mixturka.RecipesListResponse\"\x00\x12@\n" +
	"\aBrewPot\x12\x18.mixturka.PotBrewRequest\x1a\x19.mixturka.PotBrewResponse\"\x00B\x03Z\x01/b\x06proto3"

var (
	file_mixturka_proto_rawDescOnce sync.Once
	file_mixturka_proto_rawDescData []byte
)

func file_mixturka_proto_rawDescGZIP() []byte {
	file_mixturka_proto_rawDescOnce.Do(func() {
		file_mixturka_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mixturka_proto_rawDesc), len(file_mixturka_proto_rawDesc)))
	})
	return file_mixturka_proto_rawDescData
}

var file_mixturka_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_mixturka_proto_goTypes = []any{
	(*RecipesListRequest)(nil),  // 0: mixturka.RecipesListRequest
	(*RecipesListResponse)(nil), // 1: mixturka.RecipesListResponse
	(*PotBrewRequest)(nil),      // 2: mixturka.PotBrewRequest
	(*PotBrewResponse)(nil),     // 3: mixturka.PotBrewResponse
	(*Recipe)(nil),              // 4: mixturka.Recipe
	(*Ingredient)(nil),          // 5: mixturka.Ingredient
	(*Error)(nil),               // 6: mixturka.Error
	nil,                         // 7: mixturka.Error.DataEntry
}
var file_mixturka_proto_depIdxs = []int32{
	4, // 0: mixturka.RecipesListResponse.recipes:type_name -> mixturka.Recipe
	6, // 1: mixturka.RecipesListResponse.error:type_name -> mixturka.Error
	5, // 2: mixturka.PotBrewRequest.ingredients:type_name -> mixturka.Ingredient
	6, // 3: mixturka.PotBrewResponse.error:type_name -> mixturka.Error
	5, // 4: mixturka.Recipe.ingredients:type_name -> mixturka.Ingredient
	7, // 5: mixturka.Error.data:type_name -> mixturka.Error.DataEntry
	0, // 6: mixturka.Mixturka.ListRecipes:input_type -> mixturka.RecipesListRequest
	2, // 7: mixturka.Mixturka.BrewPot:input_type -> mixturka.PotBrewRequest
	1, // 8: mixturka.Mixturka.ListRecipes:output_type -> mixturka.RecipesListResponse
	3, // 9: mixturka.Mixturka.BrewPot:output_type -> mixturka.PotBrewResponse
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_mixturka_proto_init() }
func file_mixturka_proto_init() {
	if File_mixturka_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mixturka_proto_rawDesc), len(file_mixturka_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mixturka_proto_goTypes,
		DependencyIndexes: file_mixturka_proto_depIdxs,
		MessageInfos:      file_mixturka_proto_msgTypes,
	}.Build()
	File_mixturka_proto = out.File
	file_mixturka_proto_goTypes = nil
	file_mixturka_proto_depIdxs = nil
}
